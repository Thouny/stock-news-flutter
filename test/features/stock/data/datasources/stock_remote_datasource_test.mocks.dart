// Mocks generated by Mockito 5.4.4 from annotations
// in stock_news_flutter/test/features/stock/data/datasources/stock_remote_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i2;
import 'package:stock_news_flutter/core/network/api/financial_modeling_prep_http_client.dart'
    as _i3;
import 'package:stock_news_flutter/core/network/models/get_historical_stock_response_model.dart'
    as _i5;
import 'package:stock_news_flutter/core/storage/secure_storage.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FinancialModelingPrepHttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialModelingPrepHttpClient extends _i1.Mock
    implements _i3.FinancialModelingPrepHttpClient {
  MockFinancialModelingPrepHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResponse<_i5.GetHistoricalStockResponseModel>>
      getHistoricalStockData(
    String? symbol,
    String? from,
    String? to,
    String? serieType,
    String? apiKey,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getHistoricalStockData,
              [
                symbol,
                from,
                to,
                serieType,
                apiKey,
              ],
            ),
            returnValue: _i4.Future<
                    _i2
                    .HttpResponse<_i5.GetHistoricalStockResponseModel>>.value(
                _FakeHttpResponse_0<_i5.GetHistoricalStockResponseModel>(
              this,
              Invocation.method(
                #getHistoricalStockData,
                [
                  symbol,
                  from,
                  to,
                  serieType,
                  apiKey,
                ],
              ),
            )),
          ) as _i4
              .Future<_i2.HttpResponse<_i5.GetHistoricalStockResponseModel>>);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i6.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<T?> read<T>(
    String? key, {
    T? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i4.Future<T?>.value(),
      ) as _i4.Future<T?>);

  @override
  _i4.FutureOr<void> write(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #write,
        [
          key,
          value,
        ],
      )) as _i4.FutureOr<void>);

  @override
  _i4.FutureOr<void> delete(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #delete,
        [key],
      )) as _i4.FutureOr<void>);
}
